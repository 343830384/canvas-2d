/* 

全局配置, 提交存储时,直接复制 该 项目 
*/
var G_cfg={
        //项目
        project:{
            name:'', //项目名称
            //path:'', //项目路径
            path:'E:/test', //test
            // source:''//素材源  (记录最近的一个)
            source:"F:/canvas 2D测试", //test
        },
        //所有基础图片配置 (按id 排序)  
        img:{
            //imgId:[imgId,['file1','file2']], //0:imgID,1:[基础目录下文件路径],2:[w,h,基点]
        },
        //img分类储存树 (包含了音频)
        img_tree:{
         //基本结构  (显示为 test )
            /*
            tpId:[],//图片id ,用于查重,禁止重复
            ypId:[],   //音频id ,用于查重,禁止重复
            data:{//分类列表   主目录:{'子目录',...}
                     //+> path>path={id:{}}
                    '地图':{'水面':{},'土地':{},'草地':{},'地板':{}},
                    '建筑':{'外墙':{},'内墙':{},'屋顶':{},'窗户':{},'装饰':{}},
                    '树木':{'普通':{},'枯树':{},'果树':{}},
                    '植物':{'草':{},'花':{},'灌木':{}},
                    'NPC':{'玩家':{},'居民':{},'动物':{},'怪物':{},'特殊':{}},
                    '技能':{'魔法':{},'特效':{}},
                    '物品':{'装备':{},'武器':{},'果实':{},'食物':{},'饮料':{},'材料':{}},
                    '数值':{'数字':{},'字符':{}},
                    '特殊':{'合成素材0':{},'合成素材1':{}},
                    '音频':{'背景':{},'行走':{},'技能':{},'系统':{},'天气':{},'怪物':{},'特殊':{}} 
            }, */
        },
        //img  帧动画 和 过渡帧动画  基于img
        img_pj_dh:{
             /* id:[],//用于查重,禁止重复  (顺位补位逻辑)
             ml_tree:{
                  '主':{
                     '子':id指向id_data,   
                  }  
             },
             id_data:{
                  'id':{
                        t:true,// true:循环播放,false:单次
                        dh:1:,//动画类型=> 1:帧过渡动画(每一帧数据类型结构相同),0:帧切换动画(每一帧允许单独的数据结构) 
                        jd:[x,y], //地平线基点 默认300,40, 其中y值是演示区 style.bottom 从下往上算   (主要是演示区 使用)
                        id:[imgId1,imgId2,...], //包含的 子img id (用于图片集中请求加载 暂未!!!)
                        list:[],// 帧执行目录顺序, 子值 指向fps 的索引
                        time:[], //每帧显示时间
                     // event:[],// 地图布置时 单独的设置在地图数据!!,对应 list索引位置,-1占位 子=> [[事件id..],类型] //类型=>0:帧开始时触发,1:帧结束时触发,2:(>1=time)延迟触发(不得大于帧显示时间 ,注意音频时间,防止无限叠加)
                        fps:[
                             [//第0帧 
                                 [imgId,w,h,x,y,jx,yy,xs,wy],
                                 //0  y=>值越大演示区越向上 , jx=>0:默认,1:镜像 
                                   6 yy=>是否为阴影地面帧 0:否,1:是 (用于布局时单独设置,是否浮动与某些物体之上, 而非普通地面阴影) ;
                                   7 xs=>0:隐藏,1:显示;
                                   8: wy 位移(如:-1上一个逻辑轴渲染,+1下一个逻辑轴渲染 0:当前轴) 范围 -5 ~ +5 当前允许范围 (多用于 技能特效展示, 其它范围效果也可以)
                                 [imgId,w,h,x,y,jx,yy,xs,wy],//1
                                 ....    
                             ],    
                        ],
                        //过渡动画的 关系链 ,基于当前所在帧的 index 指向其它帧的 index 
                        gx:[
                            [null,2], //所在索引对应 list 执行目录索引 ,并且代表当前帧中的每个 imgIndex 对应下一帧(list下一帧) 的 imgIndex  (对应参数,只涉及 w,h,x,y)
                               //null:无, 2:index=2的img 对应next 播放帧(list下一帧) 内的imgIndex的 w,h,x,y属性
                            
                        ]
                   }
             } */
        },
        //音频
        audio:{
        },
        //蓝图\逻辑
        logic:{
           /*  
             id:[], //用于查重,禁止重复   蓝图面板ID
             0:{//id=0蓝图
                a:'蓝图id',
                b:'蓝图描述',
                c:[x,y,w,h], //蓝图位置和宽高
                d:[], //子元素id 列表 ,用于查重
                e:{//子元素
                    id_0:{...}
                }  
             }
           */
        },
        //ui面板配置
        ui:[
             /*  {
                    ui_id:n,//ui面板id 唯一  (从0开始,顺序补位)
                    ui_ys_id:0,    //ui面板 元素id ,默认从0开始  (创建一个 新的就++) 
                    ui_bz:'',      //  ui备注
                    data:{ //所有子数据 (第一层是模板本身)
                           
                        type:t,    //类型 0:ui面板本身,1:普通文本div,2:button按钮,3:input框,4:文本域,5:div容器域 
                        child:[],  //同辈子元素(若有, 仅限type=5 容器才有)
                        pId:pId,   //ui面板 id
                        zId:zId,   //元素 id
                        ms:'',     //描述
                        //基本参数
                        basic:{  
                            w:'',h:'',
                            yj:'',//圆角
                            l:'',r:'',t:'',b:'',  // left,right,top,bottom
                            ml:'',mt:'',mr:'',mb:'', //margin
                            bk:'',//边宽 0:无
                            bs:'',//边颜色
                            tz:true,//默认禁止拖拽
                            sr:true,// 默认禁止输入 
                            zd:'',//自动生成 数量大于0时生效
                            px:'',//自动生成左边距
                            py:'',//自动生成右边距
                        },
                        //文字参数
                        font:{
                            zt:'',//字体
                            dx:'',//大小
                            jc:true,//默认加粗
                            hg:'',//行高
                            sp:'',//水平居 ( 左 中 右 )
                            cz:'',//垂直居 ( 上 中 下 )
                            jj:'',//文字间距
                            ys:'',//文字颜色
                            bj:'',//内容边距 左,右,上,下
                            pl:'',//文字动画更新频率间隔
                            gx:'',//每次间隔更新的字数总量
                        },
                        //背景图
                        bg_img:{
                            bg:'',bg_w:'',bg_h:'',bg_px:'',bg_py:'',bg_pp:false, //背景图,宽,高,px,py,平铺F
                            hbg:'',hbg_w:'',hbg_h:'',hbg_px:'',hbg_py:'', //hove
                            dbg:'',dbg_w:'',dbg_h:'',dbg_px:'',dbg_py:'', //down
                            ubg:'',ubg_w:'',ubg_h:'',ubg_px:'',ubg_py:'', //up
                            bbg:'',bpl:'',bbg_w:'',bbg_h:'',bbg_px:'',bbg_py:''//变换的
                        },
                        //背景色
                        bg_color:{
                            bg:'',
                            hbg:'', //hover
                            dbg:'', //down
                            ubg:'', //up
                            bbg:'',bpl:''//变换的
                        },
                        //事件
                        event:{
                            click:[],c_key:'', down:[],d_key:'',up:[],u_key:'',hover:[],move:[]
                        }
                            
                    },//data END~~~
                }  */
        ],
        map:{
            id:[],//已有mapId列表
            /* 
            mapId:{
                   a:'mapName',
                //    d:map,1:solid,2:[floor障碍],3:[zw,zh,w,h,mw,mh,sw,sh]] 这里不存放地图数据
                   e:{//地图事件
                        //事件0
                            0:[*0,*1,*2,*3,*4],
                            *0类型:{
                                0:背景音乐{ //一直循环
                                    *1:音乐id
                                },
                                1:音源音效:{
                                    *1:传播范围(依据逻辑格)
                                }
                                2:区域触发:{
                                    *1:[x1,x2,x3,x4],//触发范围
                                    *2:[eT,eID], [事件类型,事件id] et=> 0:NPC事件,1:地图事件,2:天气事件,3:音效事件,4:物品事件,5:UI事件
                                    *3:(0:可重复触发事件,1:一次性)   (当事件触发完成时)
                                },
                                3:直接触发:{  //进入就触发
                                        *1:事件id
                                        *2:(0:可重复触发事件,1:一次性)  (当事件触发完成时)
                                },  
                            },
                 },
                 u:{//基本ui面板布置
                     //uiId:
                 },
                 y:{//音频:补创
                    0:[// 背景音乐

                    ],
                    1:[//场景音源 
                        [0:x,1:y,2:ypId,3:yL,4:ypYc,6:lx]
                        //0,1:音源坐标,2:音频id,3:音量,4:延迟,5:空间高,6=>(0:单次,1:循环,2:可打断复位单次,3:可复位打断循环)
                    ]
                 } 

                 
            }, */
        },
        //后创建
        /* npc:{
            a:[],//npcId顺位查重
            b:[],//大类名列表
            c:{//基于大类名的 ,npc名
                '大类名':{ 
                      'npc姓名':'id'
                }
            },
            d:{//基于npc id 的数据集合
                'npcId':{ //
                        a:[],//动作Id 顺位查重 
                        b:'npcID',
                        c:'姓名',
                        d:{//基于dzMZ 的动作动画数据
                            '动作名称':{//dzMz (动作名称 , 唯一)
                                        a:'dzId',
                                        b:'动作名称', 
                                        c:[], //每帧显示时间
                                        d:['x','x2','y2'], //0:中轴(左面向), 1,2:状态buf基本位置
                                        t:[-1,-1],// 0=>(-1:自定义,0:站立,1:行走,2:哈欠/懒腰,3:攻击/施法),1=>(-1:无面向,0:左,1:右,2:上,3:下)
                                        e:[//dh数据
                                            [//第0帧 
                                                [imgId,w,h,x,y,jx,yy,xs,wy],
                                            ],    
                                        ],
                            },//dzMz END
                        },
                        e:{//zb数据,基于zbId, 于动作指定帧,插入帧指定索引位(层顺序)  (暂未)
                            'zbId':{
                                dzId:[ //匹配到每个动作id ,对应到帧
                                    {//0帧 对应动作帧 , 其下的装备动画 显示时间只要大于 动作帧时间, 动作期间就不会消失 
                                        a:[],//帧执行索引顺序,
                                        b:[],//每帧显示时间 (总时间 大于动作帧持续时间,就可以一直显示)
                                        c:[//当前帧动画数据
                                            [//动作帧下 子帧-0
                                            [imgId,w,h,x,y,jx,yy,xs,wy],
                                            ]
                                        ] 
                                    },
                                    {},//第1帧
                                ]
                            },
                        },
                }, //npcId END~~~~~~~~~~~~~~~~~~~~~~~~~~
            }

        }, */
        //事件配置
        event:{
        },
};
if(!G_cfg.map)G_cfg.map={id:[]}; //map 补充